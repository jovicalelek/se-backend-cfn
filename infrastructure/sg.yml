AWSTemplateFormatVersion: 2010-09-09

Description:
  This template contains the security groups required by our entire stack.

Parameters:
  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String

  VPC:
    Type: AWS::EC2::VPC::Id
    Description: Choose which VPC the security groups should be deployed to

Resources:
  # This security group defines who is allowed to access the ECS containers directly.
  # By default it's just allowing access from the load balancer and from other members
  # of the security group.
  FargateContainerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Access to the Fargate containers
      # Allow inbound access to ECS from the ELB
      SecurityGroupIngress:
        IpProtocol: -1
        SourceSecurityGroupId: !Ref "AppLoadBalancerSecurityGroup"
      VpcId: !Ref "VPC"
  # Allow inbound access to ECS from other members of the security group.
  FargateContainerSecurityGroupIngressFromSelf:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref "FargateContainerSecurityGroup"
      IpProtocol: -1
      SourceSecurityGroupId: !Ref "FargateContainerSecurityGroup"

  # This security group defines who is allowed to access the Application Load Balancer.
  # By default, it's opened up to the public internet (0.0.0.0/0).
  AppLoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Access to the public facing load balancer that sits in front of ECS
      VpcId: !Ref "VPC"
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: -1

Outputs:
  FargateContainerSecurityGroup:
    Description: A reference to the security group for ECS containers
    Value: !Ref "FargateContainerSecurityGroup"

  AppLoadBalancerSecurityGroup:
    Description: A reference to the security group for the public facing application load balancer
    Value: !Ref "AppLoadBalancerSecurityGroup"
